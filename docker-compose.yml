version: '3.7'

services:

  harvester_traefik:
    image: "traefik:v2.2"
    container_name: "harvester_traefik"
    restart: unless-stopped
    command:
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=true"
        - "--api.insecure=true"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.web-secure.address=:443"
        - "--entrypoints.web.forwardedheaders.insecure"
        - "--entrypoints.web.proxyprotocol.insecure"
        - "--certificatesresolvers.letsencrypt.acme.email=admin@whiteaster.com"
        - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
        - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    labels:
        - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.entrypoints=web"
        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    ports:
        - 80:80
        - 443:443
    volumes: 
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks: 
        - harvester_network

  harvester_db:
    container_name: "harvester_db"
    image: "mongo:4.2"
    restart: unless-stopped
    volumes:
      - init_db:/docker-entrypoint-initdb.d
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=harvester
      - MONGO_INITDB_ROOT_USERNAME=harvester
      - MONGO_INITDB_ROOT_PASSWORD=harvester_password
    networks:
      - harvester_network

  harvester_redis:
    container_name: "harvester_redis"
    image: "redis:6-alpine"
    restart: unless-stopped
    networks: 
      - harvester_network

  harvester_backend: &harvester_backend
    container_name: "harvester_backend"
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - READ_DOR_ENV=true
    env_file:
      - example.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.harvester_backend.rule=Host(`${URL}`)
      - traefik.http.services.harvester_backend.loadbalancer.server.port=8000
      - traefik.http.routers.harvester_backend.entrypoints=web-secure
      - traefik.http.middlewares.harvester_backend.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH
      - traefik.http.middlewares.harvester_backend.headers.accesscontrolalloworigin=origin-list-or-null
      - traefik.http.middlewares.harvester_backend.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.harvester_backend.headers.addvaryheader=true
      - traefik.http.routers.harvester_backend.tls=true
      - traefik.http.routers.harvester_backend.tls.certresolver=letsencrypt
    networks:
      - harvester_network

  harvester_celery:
    <<: *harvester_backend
    image: "harvester_celery"
    container_name: "harvester_celery"
    labels: []
    command: 'bash -c "/app/docker/entrypoint-celery.sh"'

# volumes definiton
volumes:
  init_db:
  mongo_data:
  redis_data:

# network definition
networks:
  harvester_network:
    driver: bridge
